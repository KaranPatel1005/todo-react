{"version":3,"sources":["components/FilterButton.js","components/Todo.js","components/Form.js","App.js","index.js"],"names":["FilterButton","props","type","className","aria-pressed","Todo","useState","isEditing","setEditing","newName","setNewName","editingTemplete","onSubmit","e","preventDefault","editTask","id","htmlFor","name","value","onChange","target","onClick","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","Form","setName","isActive","setActive","addTask","autoComplete","App","tasks","setTasks","updatedTasks","map","task","remainingTasks","filter","editedTaskList","tasklist","keys","tasksNoun","length","headingText","newTask","nanoid","rol","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ac7a5f5a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction FilterButton(props) {\r\n    return (\r\n        <button\r\n            type=\"button\" className=\"btn toggle-btn\" aria-pressed=\"true\">\r\n            <span className=\"visually-hidden\">Show </span>\r\n            <span>all</span>\r\n            <span className=\"visually-hidden\"> tasks</span>\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState } from 'react';\r\n\r\nfunction Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setNewName(e.target.value);\r\n    }\r\n\r\n    const editingTemplete = (\r\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    New name for {props.name}\r\n                </label>\r\n                <input\r\n                    id={props.id}\r\n                    className=\"todo-text\"\r\n                    type=\"text\"\r\n                    value={newName}\r\n                    onChange={handleChange} />\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn todo-cancel\"\r\n                    onClick={() => setEditing(false)}>\r\n                    Cancel\r\n                    <span className=\"visually-hidden\">renaming {props.name}</span>\r\n                </button>\r\n                <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n                    Save\r\n                    <span className=\"visually-hidden\">new name for {props.name}</span>\r\n                </button>\r\n            </div>\r\n        </form>\r\n    );\r\n    const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n            <div className=\"c-cb\">\r\n                <input\r\n                    id={props.id}\r\n                    type=\"checkbox\"\r\n                    defaultChecked={props.completed}\r\n                    onChange={() => props.toggleTaskCompleted(props.id)}\r\n                />\r\n                <label className=\"todo-label\" htmlFor={props.id}>\r\n                    {props.name}\r\n                </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn\"\r\n                    onClick={() =>\r\n                        setEditing(true)}>\r\n                    Edit <span className=\"visually-hidden\">{props.name}</span>\r\n                </button>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"btn btn__danger\"\r\n                    onClick={() => props.deleteTask(props.id)}\r\n                >\r\n                    Delete <span className=\"visually-hidden\">{props.name}</span>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <li className=\"todo stack-small\">\r\n            {isEditing ? editingTemplete : viewTemplate}\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React, { useState } from 'react';\r\n\r\nfunction Form(props) {\r\n    const [name, setName] = useState('');\r\n    const [isActive, setActive] = useState(\"false\");\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        if (name === '') {\r\n            setActive(\"\");\r\n            e.preventDefault();\r\n        } else {\r\n            e.preventDefault();\r\n            props.addTask(name);\r\n            setName(\"\");\r\n            setActive(\"false\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <h2 className=\"label-wrapper\">\r\n                <label htmlFor=\"todo-input\" className=\"label__lg\">What need to be done?</label>\r\n            </h2>\r\n            <input\r\n                type=\"text\"\r\n                id=\"todo-input\"\r\n                className=\"input input__lg\"\r\n                name=\"text\"\r\n                autoComplete=\"off\"\r\n                value={name}\r\n                onChange={handleChange} />\r\n            <span className={isActive ? \"visually-hidden\" : \"text-red\"}>Wrtite something!</span>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"btn btn__primary btn__lg\">Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React, { useState } from 'react';\r\nimport FilterButton from './components/FilterButton';\r\nimport Todo from './components/Todo';\r\nimport Form from './components/Form';\r\nimport { nanoid } from 'nanoid';\r\n\r\nfunction App(props) {\r\n    const [tasks, setTasks] = useState(props.tasks);\r\n\r\n    function addTask(name) {\r\n        const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n        setTasks([...tasks, newTask]);\r\n    }\r\n\r\n    function toggleTaskCompleted(id) {\r\n        const updatedTasks = tasks.map(task => {\r\n            if (id === task.id) {\r\n                return { ...task, completed: !task.completed };\r\n            }\r\n            return task;\r\n        });\r\n        setTasks(updatedTasks);\r\n    }\r\n\r\n    function deleteTask(id) {\r\n        const remainingTasks = tasks.filter(task => id !== task.id);\r\n        setTasks(remainingTasks);\r\n    }\r\n\r\n    function editTask(id, newName) {\r\n        const editedTaskList = tasks.map(task => {\r\n            if (id === task.id) {\r\n                return { ...task, name: newName };\r\n            }\r\n            return task;\r\n        });\r\n        setTasks(editedTaskList);\r\n    }\r\n\r\n    const tasklist = tasks.map(task =>\r\n        <Todo\r\n            id={task.id}\r\n            name={task.name}\r\n            completed={task.completed}\r\n            keys={task.id}\r\n            toggleTaskCompleted={toggleTaskCompleted}\r\n            deleteTask={deleteTask}\r\n            editTask={editTask} />);\r\n\r\n    const tasksNoun = tasklist.length !== 1 ? 'tasks' : 'task';\r\n    const headingText = tasklist.length === 0\r\n        ? 'No Tasks'\r\n        : `${tasklist.length} ${tasksNoun} remaining`;\r\n\r\n    return (\r\n        <div className=\"todoapp stack-large\">\r\n            <h1>TodoMatic</h1>\r\n            <Form addTask={addTask} />\r\n            <div className=\"filter btn-group stack-exception\">\r\n                <FilterButton />\r\n                <FilterButton />\r\n                <FilterButton />\r\n            </div>\r\n            <h2 id=\"list-heading\">{headingText}</h2>\r\n            <ul\r\n                rol=\"list\"\r\n                className=\"todo-list stack-large stack-exception\"\r\n                aria-labelledby=\"list-heading\">\r\n                {tasklist}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nconst DATA = [\n    { id: \"todo-0\", name: \"Eat\", completed: true },\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\n]\n\nReactDOM.render(\n    <React.StrictMode >\n        <App tasks={DATA} />\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}